{"version":3,"sources":["index.js"],"names":["mainGrid","document","querySelector","setGridSize","createGrid","rowsCol","i","createDIVs","createElement","classList","add","insertAdjacentElement","style","gridTemplateColumns","gridTemplateRows","black","rainbow","eraser","colorButton","forEach","color","addEventListener","colorFill","e","gridCells","querySelectorAll","targetColor","target","contains","cells","backgroundColor","Math","random","gridSize","setButton","resetGridSize","input","value","console","log","innerHTML","alert"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["/* Creating Grid */\nlet mainGrid = document.querySelector(\".main-grid\");\nlet setGridSize = document.querySelector(\".input-grid-size\");\n\nfunction createGrid(rowsCol){\n    for(let i = 0; i < rowsCol * rowsCol; i++){\n            let createDIVs = document.createElement(\"div\");\n            createDIVs.classList.add(\"grid-element\");\n            mainGrid.insertAdjacentElement(\"beforeend\", createDIVs);\n            mainGrid.style.gridTemplateColumns = `repeat(${rowsCol}, 1fr)`;\n            mainGrid.style.gridTemplateRows = `repeat(${rowsCol}, 1fr)`;\n\n            let black = document.querySelector(\".black-btn\");\n            let rainbow = document.querySelector(\".rainbow-btn\");\n            let eraser = document.querySelector(\".eraser-btn\");\n            let colorButton = [black, rainbow, eraser];\n\n            colorButton.forEach(color => {\n                color.addEventListener('click', colorFill)\n            })\n    }\n}\n\ncreateGrid(16);\n\n/* Fill grid cells with color */\n\nfunction colorFill(e){\n    let gridCells = document.querySelectorAll(\".grid-element\");\n    let targetColor = e.target;\n    if(targetColor.classList.contains(\"black-btn\")){\n        gridCells.forEach(cells => {\n            cells.addEventListener(\"mouseover\", (e) => {\n                e.target.style.backgroundColor = \"black\";\n            })\n        })\n    } else if(targetColor.classList.contains(\"rainbow-btn\")){\n        gridCells.forEach(cells => {\n            cells.addEventListener(\"mouseover\", (e) => {\n                e.target.style.backgroundColor = `hsl(${Math.random() * 360}, 100%, 50%)`;\n            })\n        })\n    } else if(targetColor.classList.contains(\"eraser-btn\")){\n        gridCells.forEach(cells => {\n            cells.addEventListener(\"mouseover\", (e) => {\n                e.target.style.backgroundColor = \"hsl(0, 4%, 89%)\";\n            })\n        })\n    }\n}\n\n/* Reset size of grid with user's input */\n\nlet gridSize = document.querySelector(\".input-grid-size\");\nlet setButton = document.querySelector(\".set-btn\");\n\nsetButton.addEventListener(\"click\", function resetGridSize(){\n    let input = gridSize.value;\n    if(input >= 2 && input <= 80){\n        console.log(input);\n        mainGrid.innerHTML = '';\n        createGrid(input);\n    } else {\n        alert(\"Number shouldn't be lower than 2 and greater than 100. Please try again.\")\n    }\n})"]}
{"version":3,"sources":["index.js"],"names":["mainGrid","document","querySelector","setGridSize","createGrid","rowsCol","i","createDIVs","createElement","classList","add","insertAdjacentElement","style","gridTemplateColumns","gridTemplateRows","black","rainbow","eraser","colorButton","gridCells","querySelectorAll","forEach","color","addEventListener","e","targetColor","target","contains","cells","backgroundColor","Math","random","gridSize","setButton","resetGridSize","input","value","console","log","innerHTML","alert"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["/* Creating Grid */\nlet mainGrid = document.querySelector(\".main-grid\");\nlet setGridSize = document.querySelector(\".input-grid-size\");\n\nfunction createGrid(rowsCol){\n    for(let i = 0; i < rowsCol * rowsCol; i++){\n            let createDIVs = document.createElement(\"div\");\n            createDIVs.classList.add(\"grid-element\");\n            mainGrid.insertAdjacentElement(\"beforeend\", createDIVs);\n            mainGrid.style.gridTemplateColumns = `repeat(${rowsCol}, 1fr)`;\n            mainGrid.style.gridTemplateRows = `repeat(${rowsCol}, 1fr)`;\n    }\n}\n\ncreateGrid(16);\n\n/* Fill grid cells with color */\n\nlet black = document.querySelector(\".black-btn\");\nlet rainbow = document.querySelector(\".rainbow-btn\");\nlet eraser = document.querySelector(\".eraser-btn\");\nlet colorButton = [black, rainbow, eraser];\n\nlet gridCells = document.querySelectorAll(\".grid-element\");\n\ncolorButton.forEach(color => {\n    color.addEventListener('click', (e) => {\n        let targetColor = e.target;\n        if(targetColor.classList.contains(\"black-btn\")){\n            gridCells.forEach(cells => {\n                cells.addEventListener(\"mouseover\", (e) => {\n                    e.target.style.backgroundColor = \"black\";\n                })\n            })\n        } else if(targetColor.classList.contains(\"rainbow-btn\")){\n            gridCells.forEach(cells => {\n                cells.addEventListener(\"mouseover\", (e) => {\n                    e.target.style.backgroundColor = `hsl(${Math.random() * 360}, 100%, 50%)`;\n                })\n            })\n        } else if(targetColor.classList.contains(\"eraser-btn\")){\n            gridCells.forEach(cells => {\n                cells.addEventListener(\"mouseover\", (e) => {\n                    e.target.style.backgroundColor = \"white\";\n                })\n            })\n        }\n    })\n})\n\n/* Reset size of grid with user's input */\n\nlet gridSize = document.querySelector(\".input-grid-size\");\nlet setButton = document.querySelector(\".set-btn\");\n\nsetButton.addEventListener(\"click\", function resetGridSize(){\n    let input = gridSize.value;\n    if(input >= 2 && input <= 80){\n        console.log(input);\n        mainGrid.innerHTML = '';\n        createGrid(input);\n    } else {\n        alert(\"Number shouldn't be lower than 2 and greater than 100. Please try again.\")\n    }\n})"]}
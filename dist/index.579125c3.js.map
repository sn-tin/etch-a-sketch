{"mappings":"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","sources":["src/index.js"],"sourcesContent":["/* Creating Grid */\nlet mainGrid = document.querySelector(\".main-grid\");\nlet setGridSize = document.querySelector(\".input-grid-size\");\n\nfunction createGrid(rowsCol){\n    for(let i = 0; i < rowsCol * rowsCol; i++){\n            let createDIVs = document.createElement(\"div\");\n            createDIVs.classList.add(\"grid-element\");\n            mainGrid.insertAdjacentElement(\"beforeend\", createDIVs);\n            mainGrid.style.gridTemplateColumns = `repeat(${rowsCol}, 1fr)`;\n            mainGrid.style.gridTemplateRows = `repeat(${rowsCol}, 1fr)`;\n\n            let black = document.querySelector(\".black-btn\");\n            let rainbow = document.querySelector(\".rainbow-btn\");\n            let eraser = document.querySelector(\".eraser-btn\");\n            let colorButton = [black, rainbow, eraser];\n\n            colorButton.forEach(color => {\n                color.addEventListener('click', colorFill)\n            })\n    }\n}\n\ncreateGrid(16);\n\n/* Fill grid cells with color */\n\nfunction colorFill(e){\n    let gridCells = document.querySelectorAll(\".grid-element\");\n    let targetColor = e.target;\n    if(targetColor.classList.contains(\"black-btn\")){\n        gridCells.forEach(cells => {\n            cells.addEventListener(\"mouseover\", (e) => {\n                e.target.style.backgroundColor = \"black\";\n            })\n        })\n    } else if(targetColor.classList.contains(\"rainbow-btn\")){\n        gridCells.forEach(cells => {\n            cells.addEventListener(\"mouseover\", (e) => {\n                e.target.style.backgroundColor = `hsl(${Math.random() * 360}, 100%, 50%)`;\n            })\n        })\n    } else if(targetColor.classList.contains(\"eraser-btn\")){\n        gridCells.forEach(cells => {\n            cells.addEventListener(\"mouseover\", (e) => {\n                e.target.style.backgroundColor = \"hsl(0, 4%, 89%)\";\n            })\n        })\n    }\n}\n\n/* Reset size of grid with user's input */\n\nlet gridSize = document.querySelector(\".input-grid-size\");\nlet setButton = document.querySelector(\".set-btn\");\n\nsetButton.addEventListener(\"click\", function resetGridSize(){\n    let input = gridSize.value;\n    if(input >= 2 && input <= 80){\n        console.log(input);\n        mainGrid.innerHTML = '';\n        createGrid(input);\n    } else {\n        alert(\"Number shouldn't be lower than 2 and greater than 80. Please try again.\")\n    }\n})"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}